package{	import Box2D.Collision.Shapes.b2CircleShape;	import Box2D.Collision.Shapes.b2PolygonShape;	import Box2D.Common.Math.b2Vec2;	import Box2D.Dynamics.b2Body;	import Box2D.Dynamics.b2BodyDef;	import Box2D.Dynamics.b2ContactListener;	import Box2D.Dynamics.b2DebugDraw;	import Box2D.Dynamics.b2Fixture;	import Box2D.Dynamics.b2FixtureDef;	import Box2D.Dynamics.b2World;	import flash.utils.getTimer;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;		public class PhysicsWorld extends Sprite	{				public var noiseStrength:Number = 0;				public var body1posx:Number;		public var body1posy:Number;		public var body1linx:Number;		public var body1liny:Number;				public var body2posx:Number; 		public var body2posy:Number;		public var body2linx:Number;		public var body2liny:Number;					public function PhysicsWorld(flashPattern:uint) 		{					 									 					//Scaling constant 			var SCALE:Number = 60; //--> pixel to meter 			var SCALE_big:Number = 75; //for the 1000x750 dimension screen			var WIDTH:Number = 800;			var HEIGHT:Number = 600;			var speed:Number = 2;			// stopClip = 400;						//Creating the world			var gravity:b2Vec2 = new b2Vec2(0,0); //x and y coordinate			var allowSleep:Boolean = false; 			var world:b2World = new b2World(gravity,allowSleep);						//////////////////////////////////////////////////////			// Create Objects				//////////////////////////////////////////////////////						//Creating Objects in the world  			//1. Body definition			//2. Body			//3. Shape 			//4. Fixture definition 			//5. Create fixture 						//Walls						var topWallBody:b2Body = createWalls((WIDTH/2)/SCALE,10/SCALE, (WIDTH/2)/SCALE,(20/2)/SCALE,"topWall");			var bottomWallBody:b2Body = createWalls((WIDTH/2)/SCALE,590/SCALE, (WIDTH/2)/SCALE,(20/2)/SCALE,"bottomWall");			var topLeftWallBody:b2Body = createWalls(10/SCALE,100/SCALE, 10/SCALE,100/SCALE,"topLeftWall");			var bottomLeftWallBody:b2Body = createWalls(10/SCALE,(HEIGHT-100)/SCALE, 10/SCALE,100/SCALE,"bottomLeftWall");						function createWalls(positionX,positionY,halfwidth,halfheight,userdata):b2Body{				//def				var wallBodyDef:b2BodyDef = new b2BodyDef();				wallBodyDef.position.Set(positionX,positionY); //position of the body				wallBodyDef.type = b2Body.b2_staticBody; //determines the body type					var wallBody:b2Body = world.CreateBody(wallBodyDef); //adds the body to the world				//shape				var wallShape:b2PolygonShape = new b2PolygonShape(); //box shape 				wallShape.SetAsBox(halfwidth,halfheight);				//fixture 				var wallFixtureDef:b2FixtureDef = new b2FixtureDef();				wallFixtureDef.shape = wallShape;				wallFixtureDef.density = 1;				wallFixtureDef.friction = 0;				wallFixtureDef.restitution = 1;				wallBody.SetUserData(userdata);				wallBody.CreateFixture(wallFixtureDef); //assign fixture definition to the body				return wallBody;			}									trace("width", WIDTH, "height", HEIGHT, "scale", SCALE)					//Balls						switch (flashPattern){			case 1:				body1posx = (WIDTH+29)/SCALE				body1posy = (500)/SCALE				body1linx = speed*-1				body1liny = speed*-.5				body2posx = (WIDTH + 30)/SCALE				body2posy = (50)/SCALE				body2linx = speed*-1				body2liny = speed*.6				break;			case 2:				body1posx = (WIDTH+30)/SCALE				body1posy = (150)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH + 30)/SCALE				body2posy = (400)/SCALE				body2linx = speed*-1				body2liny = speed*-0.4				break;			case 3:				body1posx = (WIDTH+30)/SCALE				body1posy = (420)/SCALE				body1linx = speed*-1				body1liny = speed*-0.25				body2posx = (WIDTH + 30)/SCALE				body2posy = (50)/SCALE				body2linx = speed*-1				body2liny = speed*0.5				break;			case 4:				body1posx = (WIDTH+30)/SCALE				body1posy = (175)/SCALE				body1linx = speed*-1				body1liny = speed*0.25				body2posx = (WIDTH + 30)/SCALE				body2posy = (550)/SCALE				body2linx = speed*-1				body2liny = speed*-0.5				break;			case 5:				body1posx = (WIDTH+30)/SCALE				body1posy = (300)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH + 30)/SCALE				body2posy = (50)/SCALE				body2linx = speed*-1				body2liny = speed*0.5				break;			case 6:				body1posx = (WIDTH+30)/SCALE				body1posy = (250)/SCALE				body1linx = speed*-1				body1liny = speed*-0.55				body2posx = (WIDTH + 50)/SCALE				body2posy = (490)/SCALE				body2linx = speed*-1				body2liny = speed*-0.5				break;			case 7:				body1posx = (WIDTH+30)/SCALE				body1posy = (150)/SCALE				body1linx = speed*-1				body1liny = speed*0.45				body2posx = (WIDTH + 40)/SCALE				body2posy = (500)/SCALE				body2linx = speed*-1				body2liny = speed*-0.3				break;			case 8:				body1posx = (WIDTH+30)/SCALE				body1posy = (450)/SCALE				body1linx = speed*-1				body1liny = speed*-0.45				body2posx = (WIDTH + 42)/SCALE				body2posy = (100)/SCALE				body2linx = speed*-1				body2liny = speed*0.3				break;			case 9:				body1posx = (WIDTH+30)/SCALE				body1posy = (100)/SCALE				body1linx = speed*-1				body1liny = speed*0.34				body2posx = (WIDTH + 45)/SCALE				body2posy = (490)/SCALE				body2linx = speed*-1				body2liny = speed*-0.3				break;			case 10:				body1posx = (WIDTH+30)/SCALE				body1posy = (500)/SCALE				body1linx = speed*-1				body1liny = speed*-0.36				body2posx = (WIDTH + 50)/SCALE				body2posy = (110)/SCALE				body2linx = speed*-1				body2liny = speed*0.3				break;			case 11:				body1posx = (WIDTH+30)/SCALE				body1posy = (350)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH + 50)/SCALE				body2posy = (550)/SCALE				body2linx = speed*-1				body2liny = speed*-0.4				break;			case 12:				body1posx = (WIDTH+30)/SCALE				body1posy = (250)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH + 57)/SCALE				body2posy = (50)/SCALE				body2linx = speed*-1				body2liny = speed*0.41				break;			case 13:				body1posx = (WIDTH+30)/SCALE				body1posy = (500)/SCALE				body1linx = speed*-1				body1liny = speed*-.5				body2posx = (WIDTH + 40)/SCALE				body2posy = (200)/SCALE				body2linx = speed*-1				body2liny = speed*0.05				break;			case 14:				body1posx = (WIDTH+30)/SCALE				body1posy = (125)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH + 45)/SCALE				body2posy = (375)/SCALE				body2linx = speed*-1				body2liny = speed*-0.7				break;			case 15:				body1posx = (WIDTH+30)/SCALE				body1posy = (500)/SCALE				body1linx = speed*-1				body1liny = speed*-0.34				body2posx = (WIDTH + 50)/SCALE				body2posy = (200)/SCALE				body2linx = speed*-1				body2liny = speed*0.1				break;			case 16:				body1posx = (WIDTH+30)/SCALE				body1posy = (100)/SCALE				body1linx = speed*-1				body1liny = speed*0.36				body2posx = (WIDTH + 50)/SCALE				body2posy = (400)/SCALE				body2linx = speed*-1				body2liny = speed*-0.1				break;			case 17:				body1posx = (WIDTH+30)/SCALE				body1posy = (200)/SCALE				body1linx = speed*-1				body1liny = speed*0.12				body2posx = (WIDTH + 50)/SCALE				body2posy = (450)/SCALE				body2linx = speed*-1				body2liny = speed*-0.2				break;			case 18:				body1posx = (WIDTH+30)/SCALE				body1posy = (300)/SCALE				body1linx = speed*-0.8				body1liny = speed*0				body2posx = (WIDTH + 300)/SCALE				body2posy = (300)/SCALE				body2linx = speed*-1.2				body2liny = speed*0				break;			//additional clips 			case 19:				body1posx = (WIDTH+30)/SCALE				body1posy = (500)/SCALE				body1linx = speed*-1				body1liny = speed*-.5				body2posx = (WIDTH + 60)/SCALE				body2posy = (130)/SCALE				body2linx = speed*-1				body2liny = speed*0.3				break;			case 20:				body1posx = (WIDTH+30)/SCALE				body1posy = (300)/SCALE				body1linx = speed*-1				body1liny = speed*0				body2posx = (WIDTH+30)/SCALE				body2posy = (100)/SCALE				body2linx = speed*-1				body2liny = speed*0.4				break;			}												//create the balls			var ball1Body:b2Body = createBalls(body1posx,body1posy, 1, new b2Vec2(body1linx,body1liny), 0,"redBall",b2Body.b2_dynamicBody);			var ball2Body:b2Body = createBalls(body2posx,body2posy, 1, new b2Vec2(body2linx,body2liny), 0,"greyBall",b2Body.b2_dynamicBody);						function createBalls(positionX,positionY,density,linearVel,linearDamp,userdata,type):b2Body{				//def				var ballBodyDef:b2BodyDef= new b2BodyDef();				ballBodyDef.position.Set(positionX,positionY); //position of the body				ballBodyDef.type = type; //determines the body type				ballBodyDef.bullet = true; //prevents tunelling for fast moving objects				ballBodyDef.linearVelocity = linearVel; //velocity in x and y direction (x:positive --> right, y:positive --> down)				ballBodyDef.linearDamping = linearDamp; //linear damping 				//body				var ballBody:b2Body = world.CreateBody(ballBodyDef); //adds the body to the world				//shape				var ballShape:b2CircleShape = new b2CircleShape(.5); //radius of the circle (.5 m)				//fixture 				var ballFixtureDef:b2FixtureDef = new b2FixtureDef();				ballFixtureDef.shape = ballShape;				ballFixtureDef.density = density;				ballFixtureDef.friction = 0;				ballFixtureDef.restitution = 1;								ballBody.SetUserData(userdata);				ballBody.CreateFixture(ballFixtureDef); //assign fixture definition to the body								return ballBody;			}									//////////////////////////////////////////////////////			// DRAWING				//////////////////////////////////////////////////////									//attach skins to bodies 			function attachSkin(clip, body):MovieClip{				var skin:MovieClip = clip;				skin.x = body.GetPosition().x*SCALE;				skin.y = body.GetPosition().y*SCALE;				addChild(skin);				return skin;			}								//draw the balls (by using the symbols created in flash)			var ball1Skin:MovieClip = new redball();  			addChild(ball1Skin); //problem: adds it to the stage very briefly			ball1Skin.visible = false;						var ball2Skin:MovieClip = new greyball();  			addChild(ball2Skin);			ball2Skin.visible = false;						function drawBalls():void{					ball1Skin.x = ball1Body.GetPosition().x*SCALE;					ball1Skin.y = ball1Body.GetPosition().y*SCALE;					ball1Skin.visible = true;										ball2Skin.x = ball2Body.GetPosition().x*SCALE;					ball2Skin.y = ball2Body.GetPosition().y*SCALE;					ball2Skin.visible = true;			}									addEventListener(Event.ENTER_FRAME, update);									//////////////////////////////////////////////////////			// UPDATE FUNCTION			//////////////////////////////////////////////////////						var timer:int = 0;						function update(e:Event):void{				var timeStep:Number = 1 /30;				var velocityIterations:int = 10;				var positionIterations:int = 10;															world.Step(timeStep,velocityIterations,positionIterations);				world.ClearForces();								//trace(data)				drawBalls(); //draws the balls (updates the positions of the movieclips										timer = timer + 1; //updates the timer								//checks when to stop 				if (timer >= 300){					//stops the world					removeEventListener(Event.ENTER_FRAME, update);					dispatchEvent(new Event("clipFinished"));				}			}		}	}}